#! /bin/sh
# Copyright (c) 2009 SUSE Linux AG, Nuernberg, Germany.
# All rights reserved.
#
# Author: Adrian Schroeter
# Please send feedback to http://www.suse.de/feedback/
#
# /etc/init.d/obsapidelayed
#   and its symbolic link
# /(usr/)sbin/rcobsapidelayed
#
#    This program is free software; you can redistribute it and/or modify 
#    it under the terms of the GNU General Public License as published by 
#    the Free Software Foundation; either version 2 of the License, or 
#    (at your option) any later version. 
# 
#    This program is distributed in the hope that it will be useful, 
#    but WITHOUT ANY WARRANTY; without even the implied warranty of 
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
#    GNU General Public License for more details. 
# 
#    You should have received a copy of the GNU General Public License 
#    along with this program; if not, write to the Free Software 
#    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
### BEGIN INIT INFO
# Provides:          obsapidelayed
# Required-Start:    $network $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Should-Start:      obsapisetup
# Should-Stop:       $none
# Default-Start:     3 5
# Default-Stop:      0 1 2 6
# Short-Description: OBS api delayed jobs
# Description:       Start the delayed job handler for OBS api
### END INIT INFO

. /etc/rc.status

DELAYED_BIN=/srv/www/obs/api/script/delayed_job.api

# number of parallel jobs
NUM=3

# Reset status of this service
rc_reset

case "$1" in
    start)
	echo -n "Starting OBS api delayed job handler "
        export RAILS_ENV="production"
        startproc -w -u wwwrun -g www -- $DELAYED_BIN start -n $NUM
        : # startproc does not find the renamed processes...
	rc_status -v
	;;
    stop)
	echo -n "Stoping OBS api delayed job handler "
        export RAILS_ENV="production"
        startproc -w -u wwwrun -g www -- $DELAYED_BIN stop

	rc_status -v
	;;
    try-restart|condrestart)
	if test "$1" = "condrestart"; then
		echo "${attn} Use try-restart ${done}(LSB)${attn} rather than condrestart ${warn}(RH)${norm}"
	fi
	$0 status
	if test $? = 0; then
		$0 restart
	else
		rc_reset	# Not running is not a failure.
	fi
	rc_status
	;;
    restart)
	$0 stop
	$0 start

	rc_status
	;;
    force-reload)
	echo -n "Reload service OBS api delayed jobs "
	$0 try-restart
	rc_status
	;;
    reload)
	## Not supported
	rc_failed 3
	rc_status -v
	;;
    status)
	echo -n "Checking for service delayed OBS api jobs "
	checkproc delayed_job.0
        [ $? == $NUM ]
	rc_status -v
	;;
    *)
	echo "Usage: $0 {start|stop|status|try-restart|restart|force-reload|reload}"
	exit 1
	;;
esac
rc_exit
